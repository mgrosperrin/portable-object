{
  "parse-file.html": {
    "href": "parse-file.html",
    "title": "Parse a PortableObject file | MGR.PortableObject documentation site",
    "keywords": "Parse a PortableObject file Create a parser Create a parser: using MGR.PortableObject.Parsing; TextReader textReader = ...: var parser = new PortableObjectParser(); Parse a file You can parse a .po file by passing a TextReader to the parser. var catalog = await parser.ParseAsync(textReader, culture);"
  },
  "catalog.html": {
    "href": "catalog.html",
    "title": "PortableObject catalog | MGR.PortableObject documentation site",
    "keywords": "PortableObject catalog How to use the catalog Once you have a catalog (for example after parsing it ), you can get an entry. Get an entry for a simple id ICatalog catalog = GetCatalog(); var key = new PortableObjectKey(\"book\"); var entry = catalog.GetEntry(key); Get an entry for a simple id and a context ICatalog catalog = GetCatalog(); var key = new PortableObjectKey(\"context.view\", \"book\"); var entry = catalog.GetEntry(key); Get an entry for pluralisation ICatalog catalog = GetCatalog(); var key = new PortableObjectKey(\"context.view\", \"book\", \"books\"); var entry = catalog.GetEntry(key); Retrieve the translation for the entry // has the entry translation defined? var hasTranslation = entry.HasTranslation; // gets the primary translation (or the key if the entry has no translation) var translation = entry.GetTranslation(); // gets the plural form of the translation // for a quantity var pluralForm = entry.GetTranslation(quantity);"
  },
  "index.html": {
    "href": "index.html",
    "title": "MGR.PortableObject documentation | MGR.PortableObject documentation site",
    "keywords": "MGR.PortableObject documentation MGR.PortableObject is a set of library to deal with PortableObject catalog and file. MGR.PortableObject MGR.PortableObject is the library containing the .NET implementation of a PortableObject (GNU gettext) catalog. You can learn more about the API . MGR.PortableObject.Parsing MGR.PortableObject.Parsing is a library to parse a .po file and gets a ICatalog . You can learn more about parsing a .po file here ."
  }
}